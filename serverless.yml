org: bodiddlie
app: pile-of-shame-focus-app
service: pile-of-shame-focus

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  stage: ${opt:stage, self:provider.stage}
  ui:
    address:
      local: http://localhost:3000
      dev: https://pileofshame.klepinger.dev

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  environment:
    TABLE_NAME: ${self:service}-${self:custom.stage}
    JWT_SECRET: ${ssm:/focus-jwt-key~true}
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - ses:SendEmail
      Resource:
        - 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.TABLE_NAME}'
        - 'arn:aws:ses:${opt:region, self:provider.region}:*:*'

functions:
  sign-up:
    handler: auth/signup.signup
    environment:
      SECRET_KEY: ${ssm:/focus-encryption-key~true}
      ADDRESS: ${self:custom.ui.address.${self:provider.stage}}
    events:
      - http:
          path: signup
          method: post
          cors: true

  login:
    handler: auth/login.login
    environment:
      SECRET_KEY: ${ssm:/focus-encryption-key~true}
    events:
      - http:
          path: login
          method: post
          cors: true

  profile:
    handler: auth/profile.profile
    events:
      - http:
          path: profile
          method: get
          cors: true

  top-game:
    handler: game/top.top
    events:
      - http:
          path: topgame
          method: get
          cors: true

  get-game:
    handler: game/get.get
    events:
      - http:
          path: games
          method: get
          cors: true

  add-game:
    handler: game/add.add
    events:
      - http:
          path: games
          method: post
          cors: true

  complete-game:
    handler: game/complete.complete
    events:
      - http:
          path: games/{id}
          method: patch
          cors: true

  remove-game:
    handler: game/remove.remove
    events:
      - http:
          path: games/{id}
          method: delete
          cors: true

  sort-games:
    handler: game/sort.sort
    events:
      - http:
          path: games/sort
          method: put
          cors: true

  search-game:
    handler: game/search.search
    environment:
      GB_URL: 'https://giantbomb.com/api/games'
      GB_API_KEY: ${ssm:/focus-gb-key~true}
    events:
      - http:
          path: search
          method: get
          cors: true

resources:
  - ${file(resources/gateway-errors.yml)}
  - ${file(resources/dynamo.yml)}
